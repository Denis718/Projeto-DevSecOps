pipeline {
    agent any
    stages {
        stage("Verify tooling") {
            steps{
                //jq --version
                sh '''
                    docker compose version
                    curl --version 
                    docker info
                    docker version
                '''
                
            }
        }
      
      
        stage('Github'){
            steps{
                git branch: 'main', url: 'https://github.com/EnricoEng/Projeto-Integrado-DSO.git'
            }
        }
        
        stage("Starting Container") {
            steps{
                sh 'docker compose -f todo_list/docker-compose.yml up -d --no-color --wait'
            }
        }
        
        stage('SCA Analysis with Aqua Trivy') {
            steps {
                 // Install trivy
                sh 'curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin v0.18.3'
                sh 'curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/html.tpl > html.tpl'

                // Scan all vuln levels
                sh 'mkdir -p reports'
                //sh 'trivy image --ignore-unfixed --vuln-type os,library --format template --template "@html.tpl" -o reports/scanResult.html todo_list-nginx_todo'
                sh 'trivy image --ignore-unfixed --vuln-type os,library --format template --template "@html.tpl" -o reports/scanResult.html todo_list-web_todo'
                //sh 'trivy image --ignore-unfixed --vuln-type os,library --format template --template "@html.tpl" -o reports/scanResult.html postgres:15.2-bullseye'
                
                publishHTML (target : [
                    allowMissing: true,
                    alwaysLinkToLastBuild: true,
                    keepAll: true,
                    reportDir: 'reports',
                    reportFiles: 'scanResult.html',
                    reportName: 'Trivy Scan',
                    reportTitles: 'Trivy Scan'
                ])

                // Scan again and fail on CRITICAL vulns
                //sh 'trivy image --ignore-unfixed --vuln-type os,library --exit-code 1 --severity CRITICAL todo_list-nginx_todo '
                sh 'trivy image --ignore-unfixed --vuln-type os,library --exit-code 1 --severity CRITICAL todo_list-web_todo '
                //sh 'trivy image --ignore-unfixed --vuln-type os,library --exit-code 1 --severity CRITICAL postgres:15.2-bullseye '
            }
        }
        
    }
}
